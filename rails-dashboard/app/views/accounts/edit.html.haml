.uk-margin
.uk-card.uk-card-default.uk-card-body
  %h3.text-center
    = t('accounts.status')
    = mode_status(@account)

  = simple_form_for(@account,  html: { class: 'form-horizontal' }) do |f|
    = f.error_notification
    .uk-margin
    = f.input :live_mode, label: t('accounts.modes.live'), input_html: { id: 'accountLiveMode', class: 'uk-checkbox uk-form-width-medium', style: 'margin-right: 5px;' }
    #testModeEmail{style: "display: #{@account.live_mode ? 'none' : 'block'};"}
      .uk-margin
      %label= t('accounts.info.test_mode_email')
      = f.input :to_email_for_test, input_html: { class: 'uk-input uk-form-width-large' }, autofocus: true, label: false, placeholder: 'example@email.com'
      %p.uk-text-danger
        %i= t('accounts.warnings.notifications_not_send_to_real_address')

    .uk-margin
    = f.submit t('actions.save'), class: 'uk-button uk-button-primary'


.uk-margin
= render 'form', account: @account

.uk-margin
.uk-card.uk-card-default.uk-card-body
  %h3.text-center= t('accounts.team.members')
  = simple_form_for(:invitation,  html: { class: 'form-horizontal' }, url: invitations_path, method: :post) do |f|
    .uk-margin
      = f.input :email, label: t('accounts.form.email'), placeholder: 'email@example.com', input_html: { class: 'uk-input' }
      = f.input :account, :as => :hidden, :input_html => { :value => @account.id }
    = f.submit t('accounts.form.invite'), class: 'uk-button uk-button-primary'
  %br

  %table.uk-table.uk-table-responsive.uk-table-divider
    %thead
      %tr
        %th #
        %th= t('accounts.form.email')
        %th= t('accounts.form.role')
        %th
    %tbody
      - @account.account_users.each do |au|
        %tr
          %td= au.id
          %td= au.user.email
          %td= au.role
          %td
            - unless au.role == 'owner'
              = link_to invitation_path(au.id, account_id: @account.id), method: :patch do
                %span.badge.badge-pill.badge-default
                  = t('accounts.team.resend_confirm')
